{
  "intra_cot": "We will manually measure the offset by stopping at gets, capturing the buffer pointer from the first argument (RDI), switching to the caller frame, and computing the byte distance to the saved return address at RBP+8. First, record binary architecture details to confirm x86_64 calling convention assumptions, then run a non-interactive GDB batch to log the buffer and saved RIP addresses and their difference, and finally extract the numeric offset for later use.",
  "actions": [
    {
      "name": "Identify binary and record arch info",
      "cmd": "bash -lc 'B=\"${BIN:-}\"; [ -x \"$B\" ] || B=\"$(find . -maxdepth 1 -type f -executable -exec file {} \\; | grep -m1 \"ELF\" | cut -d: -f1)\"; [ -x \"$B\" ] || B=\"./vuln\"; [ -x \"$B\" ] || B=\"./a.out\"; [ -x \"$B\" ] || { echo \"No binary found\" >&2; exit 1; }; file \"$B\" > bin_info.txt'",
      "success": "grep -q 'ELF' bin_info.txt",
      "artifact": "bin_info.txt",
      "fallback": "-"
    },
    {
      "name": "GDB post-gets stack measurement",
      "cmd": "bash -lc 'B=\"${BIN:-}\"; [ -x \"$B\" ] || B=\"$(find . -maxdepth 1 -type f -executable -exec file {} \\; | grep -m1 \"ELF\" | cut -d: -f1)\"; [ -x \"$B\" ] || B=\"./vuln\"; [ -x \"$B\" ] || B=\"./a.out\"; [ -x \"$B\" ] || { echo \"No binary found\" >&2; exit 1; }; gdb -q -batch -ex \"set pagination off\" -ex \"file $B\" -ex \"break gets\" -ex \"run\" -ex \"set \\$buf = \\$rdi\" -ex \"frame 1\" -ex \"set \\$saved_addr = \\$rbp + 8\" -ex \"printf \\\"BUF=%p\\\\n\\\", (void*)\\$buf\" -ex \"printf \\\"SAVED_RIP_ADDR=%p\\\\n\\\", (void*)\\$saved_addr\" -ex \"printf \\\"OFFSET_BYTES=%ld\\\\n\\\", (long)\\$saved_addr - (long)\\$buf\" > gdb_gets_offset.log 2>&1'",
      "success": "grep -q 'OFFSET_BYTES=' gdb_gets_offset.log",
      "artifact": "gdb_gets_offset.log",
      "fallback": "bash -lc 'B=\"${BIN:-}\"; [ -x \"$B\" ] || B=\"$(find . -maxdepth 1 -type f -executable -exec file {} \\; | grep -m1 \\\"ELF\\\" | cut -d: -f1)\"; [ -x \"$B\" ] || B=\"./vuln\"; [ -x \"$B\" ] || B=\"./a.out\"; [ -x \"$B\" ] || { echo \"No binary found\" >&2; exit 1; }; gdb -q -batch -ex \"set pagination off\" -ex \"set startup-with-shell on\" -ex \"file $B\" -ex \"break gets\" -ex \"run < /dev/null\" -ex \"set \\$buf = \\$rdi\" -ex \"finish\" -ex \"set \\$saved_addr = \\$rbp + 8\" -ex \"printf \\\"BUF=%p\\\\n\\\", (void*)\\$buf\" -ex \"printf \\\"SAVED_RIP_ADDR=%p\\\\n\\\", (void*)\\$saved_addr\" -ex \"printf \\\"OFFSET_BYTES=%ld\\\\n\\\", (long)\\$saved_addr - (long)\\$buf\" > gdb_gets_offset.log 2>&1'"
    },
    {
      "name": "Extract numeric offset",
      "cmd": "bash -lc 'grep -m1 \"OFFSET_BYTES=\" gdb_gets_offset.log | cut -d\"=\" -f2 | tr -d \"[:space:]\" > offset_bytes.txt'",
      "success": "grep -Eq '^-?[0-9]+$' offset_bytes.txt",
      "artifact": "offset_bytes.txt",
      "fallback": "-"
    }
  ]
}